# This is a file containing all information to draw all layouts for qtlcnc.
# 	Created 31.07.2018 by Nick Yakutovich (aka robotustra).
# # - menas a comment line
# All text after # is not interpreted.

# All parameters input in here in Forth like style just because it's faster and easier to parse them.

# First we have to set the geometry of the display where the program window will appear

# Define the size of logical grid where all buttons, sliders, etc will be placed.
# For simplicity and nice look I use square unit of size [ucell x ucell]

# IVAR - defines the variable with the name "ucell" and value 100.
# you can put floating point number, but it will be rounded to integer.
# usell is set in pixels.
# Variable names and commands are case sensitive. 
80 ucell IVAR  	 	

# All coordinates of elements like buttons will be done in these ligical units,
# For example, if you want to place a button to the left top corner, then the coordinates of the button will be 0,0
# for button on the right top side will be for instance 20,0. Left bottom - 0,15, and so on.

# Layout offset is set in pixels, from the top left cofner of client area of window
0 xoffs IVAR
0 yoffs IVAR
# status bar height
28 statoffs IVAR 
0 border IVAR


# Or you can put just : 10 15 LOFFS

# The flag "lauto" shows if program should calculate geometry from desktop parameters.
# The automatically calculated values could give not very nice result. If it set to 0, prigram gets all geometry
# from this file. If it set to 1 - ignore the geometry given here.
0 lauto IVAR

# Geometry of the window with respect to display coordinates and size of the windows
# if lauto == 1 these params are ignored and application is trying to load full screen mode.
# 
0 	geom_dx IVAR 	# offset of the window from the left edge
-15 geom_dy IVAR	# offset of the window from the top edge
1980 geom_wx IVAR	# width of the window
1024 geom_wy IVAR 	# height of the window


# Define layout grid size
# xgrid - the number of cells by horizontal
# ygrid - the number of cells by vertical
18 xgrid IVAR
12 ygrid IVAR

# As soon as the app is building the screen layouts dynamically have to define all elements and add them to layout one by one.
# There are some types of elements like 
# 1) button
# 2) text label
# 3) linear indicator
# 4) gl view
# may be some more later...

# Define Stop button
# Syntax: pos size bg_color line_color pictogram_path command btn_name BUTTON
17 11 sb_pos IVEC2
17 9 sb_pos_x IVEC2
2 2 size_2x2 IVEC2
"yellow" c_yellow STRI
"black" c_black STRI
"red" c_red STRI
"bisque" c_bisque STRI
"aquamarine" c_aqua STRI

"yellow" bg_color0 STRI
"darkslateblue" c_blue STRI


# color name could be taken from this list http://www.december.com/html/spec/colorsvg.html
# syntax: 'string_value_with_spaces_and_or_tabs' name_of_string_param STRI
'stop_btn:1' stop_cmd STRI

# Element status is the string which defines the element state 
'' stop_status STRI 
'one more test string' other_cmd STRI

# Define the pictogram in the square unit 100x100. Pictogram is scaled to the button size.
# Path has a multiple string parameter to add.
# Eash parameter has a mini command to encode the path:
# 1) "10,20M" means  move(10,20)
# 2) "30,40L" means  lineTo(30,40)
# 3) "85,5,10,10,0,90A"	 Arc, bounded with rectangular with the left top corner at (85,5), of size (10,10) and the angle from 0 to 90
# 4) "1,2,30,40R" means rectangle
# 5) "1,2,4C"  means circle with the radius 4 and the center point (1,2)
# 6) "1,2,30,40,5P" means rectangle with rounded corners of radius 5
# 7) "X" means path close, useful in some cases.
#

# another path to draw on the state with other colors
"P2,2,96,96,4,4"	 # rounded corners rectangular
sb_pic1 PATH
#red round button
"M90,50"
"A10,10,80,80,0,360"
sb_pic10 PATH
# STOP
"T18,58,Monospace,20,STOP"
stop_txt PATH

# rounded corners rectangular
"P2,2,96,96,4,4"
"X"
"M40,50"
"L60,50"
"M50,40"
"L50,60"
"X"
sb_pic2 PATH


# Stop button one state
sb_pos 		POS				# position of the button (or any object) 
size_2x2 	SIZE    		# 
c_yellow 	BGCOL   		# the color of the button
c_black  	PCOL    		# pen color
sb_pic1     PIX		 		# a path of the drawings 
c_red	 	BGCOL   		
c_black  	PCOL    		
sb_pic10     PIX		 		 
c_white	 	BGCOL   		
c_white  	PCOL    		
stop_txt     PIX		 		 
stop_cmd 		CMDL			# a command line which state emits when activated
stop_status 	STATL			# the status line which could be changed by other controls or by other states.
stop_btn_state0 	STATE

# Stop button state two, if this command executed the button is switched to state 0
"stop_btn:0" stop_cmd1 STRI

sb_pos 			POS				# position of the button (or any object) 
size_2x2 		SIZE    		# 
c_red 			BGCOL   		# the color of the button
c_black  		PCOL    		# pen color
sb_pic2     	PIX		 		# a path of the drawings 
stop_cmd1 		CMDL			# a command line which state emits when activated
stop_status 	STATL			# the status line which could be changed by other controls or by other states.
stop_btn_state1 	STATE


# State can have as many path as needed and they all be drawn, with corresponding pen and bg colors.
# To define the a number of pix with the color use syntax
# a1 BGCOL b1 PCOL c1 PIX ... a2 BGCOL b2 PCOL c2 PIX ....  or
# a1 BGCOL a2 BGCOL ... b1 PCOL b1 PCOL ... c1 PIX c2 PIX ...
# the sequence of pen, bg colors and PIX is not important, but the number of them should match.
# otherwise not all pathes might be drawn.



# Stop button is defined and have 2 stats. Buttons can have as many states as needed, and the switching between sates
# is done through the change of status string.
stop_btn_state0 
stop_btn_state1 
stop_btn BUTTON


# Define Start button 
1 12 start_b_pos IVEC2
1 1 size_1x1 IVEC2
"forestgreen" bg_color_green STRI
"green" bg_color_green0 STRI
"white" c_white STRI
"navy" c_navy STRI
# background path, green square
"R1,1,99,99"
start_pic0 PATH

# Rounded rectangle
"P5,5,90,90,10,10"		# Rounded corner rectangle
start_pic1 PATH

# "I"
"P48,28,6,44,3,3"
start_I PATH


'start script to execute' start_cmd STRI
"" start_status STRI

# parameter p_color (pen color) could be reused for other elements.
start_b_pos 	POS
size_1x1 		SIZE
c_blue			BGCOL
c_blue			PCOL
start_pic0		PIX
bg_color_green 	BGCOL
c_white			PCOL
start_pic1 		PIX
c_white 		BGCOL
c_white			PCOL
start_I 		PIX
start_cmd 		CMDL
start_status 	STATL
start_btn_state1 STATE

# define start button with 1 state
start_btn_state1 start_btn BUTTON

# creating layouts to display.
# layout can include buttons, labels, indicators, glview, knobs, gcodeview, gcodeedit, etc

# *Labels* are the simplest objects and they are designed to display text of graphical information. They can not send commands
# to other objects while activated (mouse clicks). Labels can include one or many states, but command lines are ignored, even if they are
# described.

# *Numbers* the indicators of number which could be set for DRO.

# *Buttons* are similar to labels but they react on mouse events like usual button and they send commands according to its current
# state. The status of the button is changed according to received signals. Buttons can have many states.

# *Indicators* Indicator is a graphical and textual element, it combines properties of button and labels at the same time. Usually it 
# displays some value with the fixed range, for instance spindle rpm, or override feeds.
# By clicking on indicator the value could be set or adjusted, depending on the mode of indicator. It's adapted to work with touchscreen.

# *Knobs* is a type of control similar to indicator, but has circular format.

# *GLview* is a region to display the working area in terms of tool trajectory, tool geometry, possibly for future the vise or
# chuck geometry (for mill and lathe)

# *Gcodeview* is an object to keep current loaded program, it could not be modified and read only.

# *gcodeedit* one line editor and interpreter object

# layout can also have states and be switched by command from any of layout element. But it does not a layout object class. It's an 
# object composed from layout objects. Layoutdata cares about current layout state and draws it.


# +Z button
15 10 z_plus_pos 			IVEC2
"skyblue" bc_skyblue 	STRI
"ivory" pc_ivory 		STRI
# background path, green square
"R1,1,99,99"
std_bg_path PATH
# Rounded rectangle
"P5,5,90,90,10,10"		# Rounded corner rectangle
std_btn_path PATH
# text +Z, format "T<x>,<y>,<font_family>,<size>,<text>"
"T20,67,Monospace,36,+Z"
z_plus_path PATH
'z+ script to execute' z_plus_cmd STRI
"" z_plus_status STRI
# parameter p_color (pen color) could be reused for other elements.
z_plus_pos		POS
size_1x1 		SIZE
# bc_skyblue		BGCOL
# bc_skyblue	    PCOL
# std_bg_path		PIX
c_bisque	 	BGCOL
c_black 		PCOL
std_btn_path	PIX
c_black			BGCOL
c_black			PCOL
z_plus_path		PIX
z_plus_cmd 		CMDL
z_plus_status 	STATL
z_plus_state0 	STATE
# define z_plus button with 1 state
z_plus_state0 z_plus_btn BUTTON

# Z-
13 10 z_minus_pos 			IVEC2
"T20,67,Monospace,36,-Z"
z_minus_path PATH
'z- script to execute' z_minus_cmd STRI
"" z_minus_status STRI
z_minus_pos		POS
size_1x1 		SIZE
# bc_skyblue		BGCOL
# bc_skyblue	    PCOL
# std_bg_path		PIX
c_bisque	 	BGCOL
c_black 		PCOL
std_btn_path	PIX
c_black			BGCOL
c_black			PCOL
z_minus_path		PIX
z_minus_cmd 		CMDL
z_minus_status 	STATL
z_minus_state0 	STATE
# define z_minus button state
z_minus_state0 z_minus_btn BUTTON

# Small Stop
2 12 sstop_pos 			IVEC2
# text -Z, format "T<x>,<y>,<font_family>,<size>,<text>"
"M79,50"
"A21,21,58,58,0,360"
sstop_path0 PATH
"M77,50"
"A25,25,50,50,0,360"
sstop_path1 PATH
'small stop script to execute' sstop_cmd STRI
"" sstop_status STRI
# parameter p_color (pen color) could be reused for other elements.
sstop_pos		POS
size_1x1 		SIZE
c_blue			BGCOL
c_blue		    PCOL
std_bg_path		PIX
c_red		 	BGCOL
c_white 		PCOL
std_btn_path	PIX
c_white			BGCOL
c_white			PCOL
sstop_path0		PIX
c_red			BGCOL
c_white			PCOL
sstop_path1		PIX
sstop_cmd 		CMDL
sstop_status 	STATL
sstop_state0 	STATE
# define z_minus button state
sstop_state0 sstop_btn BUTTON

# buttons I need on a main layout
# +1) Start button
# +2) Stop 
# +3) Emergency stop
# +4) +Z
# +5) -Z
# +6) +X
# +7) -X
# +8) Open and Load G-code
# +9) Close G-code
# +10) Home X
# +11) Home Z
# +12) Zero X
# +13) Zero Z
# 14) Machine-Absolute coordinates
# +15) Spindle CW ON
# +16) Spindle CCW ON
# +17) Spindle STOP (the same as a small stop)
# +18) Spindle +
# +19) Spindle 100%
# +20) Spindle -
# +21) Continuous motion
# +22) x 0.1 step
# +23) x 1 step
# +24) x 10 step
# +25) x 100 step
# -26) MPG? no, we dont have wheel on a panel
# +27) Feed rate override 100%
# +28) Feed rate override +
# +29) Feed rate override -
# +30) Pause G-Code (Feed) /Continue
# +31) Stop G-code (Feed)
# 32) Coolant 1 (Floud) On/Off
# 33) Coolant 2 (Mist) On/Off
# 34) Coolant auto-manual?
# 35) Jog Fast/Slow
# +36) Home ALL
# +37) Axis select Z
# +38) Axis select X
# -39) Axis select other
# +40) Run G-Code
# +41) Rewind G-Code
# 42) AUTO/Manual (Layout)
# 43) MDI (Layout)
# 44) EDIT? (Layout)
# 45) TOOLS (Layout)
# 46) Single line (single block) execution
# +47) GLView (button to be replaced with glview later)
# +48) G-Code View (to replace after)
# +49) X DRO
# +50) Z DRO
# 51) Connect to LinuxCNCrsh
# +52) Feed Value
# +53) Spindle RPM View? (no encoder info)


# 48) G-code View (button to be replaced with actual layout object after)
1 1 gcode_pos 			IVEC2
5 6	gcode_size			IVEC2
'gcode script' gcode_cmd STRI
"" gcode_status STRI
gcode_pos		POS 	gcode_size 		SIZE
pc_ivory	 	BGCOL 	c_black 		PCOL  std_bg_path		PIX 	
gcode_cmd 		CMDL 	gcode_status 	STATL 	
gcode_state0 	STATE
gcode_state0 gcode_btn BUTTON

# 47) GLView (button to be replaced with actual layout object after)
6 1 glvew_pos 			IVEC2
6 6	glvew_size			IVEC2
'glvew script' glview_cmd STRI
"" glvew_status STRI
glvew_pos		POS 	glvew_size 		SIZE
c_black		 	BGCOL 	c_black 		PCOL  	std_bg_path		PIX
glview_cmd 		CMDL 	glvew_status 	STATL
glvew_state0 	STATE
glvew_state0 glvew_btn BUTTON

# 6) +X
14 11 x_plus_pos IVEC2
"T20,67,Monospace,36,+X"
x_plus_path PATH 
'x+ script to execute' x_plus_cmd STRI 
"" x_plus_status STRI 
x_plus_pos		POS 	size_1x1 		SIZE
c_bisque	 	BGCOL 	c_black 		PCOL 	std_btn_path	PIX
c_black			BGCOL 	c_black			PCOL 	x_plus_path		PIX
x_plus_cmd 		CMDL 	x_plus_status 	STATL
x_plus_state0 	STATE
x_plus_state0 x_plus_btn BUTTON

# 6) -X
14 9 x_minus_pos IVEC2
"T20,67,Monospace,36,-X"
x_minus_path PATH 
'x- script to execute' x_minus_cmd STRI 
"" x_minus_status STRI 
x_minus_pos		POS 	size_1x1 		SIZE
c_bisque	 	BGCOL 	c_black 		PCOL 	std_btn_path	PIX
c_black			BGCOL 	c_black			PCOL 	x_minus_path	PIX
x_minus_cmd 	CMDL 	x_minus_status 	STATL
x_minus_state0 	STATE
x_minus_state0 x_minus_btn BUTTON

# 37) Axis select Z
12 2 z_sel_pos IVEC2
"T35,67,Monospace,36,Z"
z_sel_path PATH 
'x select script to execute' z_sel_cmd STRI 
"" z_sel_status STRI 
z_sel_pos 	POS 	size_1x1 	SIZE 
pc_ivory 	BGCOL 	c_black 	PCOL 	std_btn_path 	PIX
c_black 	BGCOL 	c_black 	PCOL 	z_sel_path 		PIX
z_sel_cmd 		CMDL 	z_sel_status 	STATL
z_sel_state0 	STATE
z_sel_state0 z_sel_btn BUTTON

# 38) Axis select X
12 1 x_sel_pos IVEC2
"T35,67,Monospace,36,X"
x_sel_path PATH 
'x select script to execute' x_sel_cmd STRI 
"" x_sel_status STRI 
x_sel_pos		POS 	size_1x1 		SIZE
pc_ivory	 	BGCOL 	c_black 		PCOL 	std_btn_path	PIX
c_black			BGCOL 	c_black			PCOL 	x_sel_path		PIX
x_sel_cmd 		CMDL 	x_sel_status 	STATL
x_sel_state0 	STATE
# define button state
x_sel_state0 x_sel_btn BUTTON

# 8) Open and Load G-code
1 7 openf_pos IVEC2
# open folder icon
"M20,75"
"L20,20"
"L70,20"
"L70,32"
"L35,32"
"M20,75"
"L70,75"
"L85,32"
"L35,32"
"X"
openf_path PATH 
'open file script' openf_cmd STRI 
"" openf_status STRI 
openf_pos		POS 	size_1x1 		SIZE
pc_ivory	 	BGCOL 	c_black 		PCOL 	std_btn_path	PIX
#pc_ivory		BGCOL 
c_yellow		BGCOL 	c_black			PCOL 	openf_path		PIX
openf_cmd 		CMDL  	openf_status 	STATL
openf_state0 	STATE 
openf_state0 openf_btn BUTTON

# 9) Close G-code
5 7 closef_pos IVEC2
"R40,20,20,5"
"M25,25"
"L75,25"
"R30,30,40,50"
"M40,40" "L40,70"
"M50,40" "L50,70"
"M60,40" "L60,70"
closef_path PATH 
'close file script' closef_cmd STRI 
"" closef_status STRI 
closef_pos		POS 	size_1x1 		SIZE
pc_ivory	 	BGCOL 	c_black 		PCOL  	std_btn_path	PIX
pc_ivory		BGCOL 	c_black			PCOL 	closef_path		PIX
closef_cmd 		CMDL 	closef_status 	STATL
closef_state0 	STATE
closef_state0 closef_btn BUTTON

# 10) Home X
16 1 x_home_pos IVEC2
"M18,42"
"L50,20" "L60,27" "L60,20" "L70,20" "L70,34"
"L82,42"
"L75,42"
"L75,80"
"L25,80"
"L25,42"
"L18,42"
home_path0 PATH 
"T40,65,Monospace,26,X"
x_home_path1 PATH 
'x home script to execute' x_home_cmd STRI 
"" x_home_status STRI 
x_home_pos		POS 	size_1x1 		SIZE
pc_ivory	 	BGCOL 	c_black 		PCOL 	std_btn_path	PIX
pc_ivory		BGCOL 	c_black			PCOL 	home_path0 		PIX
c_black			BGCOL 	c_black			PCOL 	x_home_path1 	PIX
x_home_cmd 		CMDL 	x_home_status 	STATL
x_home_state0 	STATE
x_home_state0 x_home_btn BUTTON

# 11) Home Z
16 2 z_home_pos IVEC2
"T40,65,Monospace,26,Z"
z_home_path1 PATH 
'z home script to execute' z_home_cmd STRI 
"" z_home_status STRI 
z_home_pos		POS 	size_1x1 		SIZE
pc_ivory	 	BGCOL 	c_black 		PCOL 	std_btn_path	PIX
pc_ivory		BGCOL 	c_black			PCOL 	home_path0 		PIX
c_black			BGCOL 	c_black			PCOL 	z_home_path1 	PIX
z_home_cmd 		CMDL 	z_home_status 	STATL
z_home_state0 	STATE
z_home_state0 z_home_btn BUTTON

# +36) Home ALL
16 3 all_home_pos IVEC2
'all home script to execute' all_home_cmd STRI 
"" all_home_status STRI 
all_home_pos		POS 	size_1x1 			SIZE
pc_ivory	 		BGCOL 	c_black 			PCOL 	std_btn_path		PIX 
pc_ivory			BGCOL 	c_black				PCOL 	home_path0 			PIX
all_home_cmd 		CMDL 	all_home_status 	STATL
all_home_state0 	STATE
all_home_state0 all_home_btn BUTTON

# 12) Zero X
17 1 x_zero_pos IVEC2
"T20,65,Monospace,26,X=0"
x_zero_path PATH 
'zero x script to execute' x_zero_cmd STRI 
"" x_zero_status STRI 
x_zero_pos		POS 	size_1x1 		SIZE
pc_ivory	 	BGCOL 	c_black 		PCOL 	std_btn_path	PIX
c_black			BGCOL 	c_black			PCOL 	x_zero_path		PIX
x_zero_cmd 		CMDL  	x_zero_status 	STATL
x_zero_state0 	STATE
x_zero_state0 x_zero_btn BUTTON

# 13) Zero Z
17 2 z_zero_pos IVEC2
"T20,65,Monospace,26,Z=0"
z_zero_path PATH 
'zero z script to execute' z_zero_cmd STRI 
"" z_zero_status STRI 
z_zero_pos		POS 	size_1x1 		SIZE
pc_ivory	 	BGCOL 	c_black 		PCOL 	std_btn_path	PIX
c_black			BGCOL 	c_black			PCOL 	z_zero_path		PIX
z_zero_cmd 		CMDL  	z_zero_status 	STATL
z_zero_state0 	STATE 
z_zero_state0 z_zero_btn BUTTON

# 40) Run G-Code
2 7 run_gcode_pos IVEC2
# 
"M20,20"
"L80,50"
"L20,80"
"L20,20"
run_gcode_path PATH 
'run g code script' run_gcode_cmd STRI 
"" run_status STRI 
run_gcode_pos		POS 	size_1x1 		SIZE
pc_ivory	 		BGCOL 	c_black 		PCOL 	std_btn_path	PIX
bg_color_green0		BGCOL 	c_black			PCOL 	run_gcode_path	PIX
run_gcode_cmd 		CMDL 	run_gcode_status 	STATL
run_gcode_state0 	STATE
run_gcode_state0 run_gcode_btn BUTTON

# 30) Pause G-Code (Feed) / Resume
3 7 pause_gcode_pos IVEC2
"R30,30,14,40"
"R56,30,14,40"
pause_gcode_path PATH 
'pause_gcode_btn:1' pause_gcode_cmd0 STRI 
"" pause_status0 STRI  
pause_gcode_pos		POS 	size_1x1	SIZE
pc_ivory	 		BGCOL	c_black 	PCOL 	std_btn_path		PIX
bg_color_green0		BGCOL 	c_black		PCOL 	pause_gcode_path	PIX
pause_gcode_cmd0	CMDL 	pause_status0 	STATL
pause_gcode_state0 	STATE
# 30.1)  Resume G-code, the same button different state
'pause_gcode_btn:0' pause_gcode_cmd1 STRI 
"" pause_status1 STRI  
pause_gcode_pos		POS 	size_1x1	SIZE
c_red	 	 		BGCOL	c_black 	PCOL 	std_btn_path		PIX
bg_color_green0		BGCOL 	c_black		PCOL 	pause_gcode_path	PIX
pause_gcode_cmd1	CMDL 	pause_status1 	STATL
pause_gcode_state1 	STATE
pause_gcode_state0 pause_gcode_state1 pause_gcode_btn BUTTON

# 54) Stop program
4 7 stop_gcode_pos IVEC2
"R30,30,40,40"
stop_gcode_path PATH 
'stop g-code script' stop_gcode_cmd STRI 
"" stop_gcode_status STRI  
stop_gcode_pos		POS 	size_1x1	SIZE
pc_ivory	 		BGCOL	c_black 	PCOL 	std_btn_path		PIX
bg_color_green0		BGCOL 	c_black		PCOL 	stop_gcode_path		PIX
stop_gcode_cmd		CMDL 	stop_gcode_status 	STATL
stop_gcode_state0 	STATE
# define button state
stop_gcode_state0  stop_gcode_btn BUTTON



# 49) X DRO
13 1 x_dro_pos IVEC2
3 1 size_3x1 IVEC2
"P2,5,97,90,3,10"
x_dro_path0 PATH
"T10,66,Monospace,12,+0.1234"
x_dro_path1 PATH
'x dro code script' x_dro_cmd STRI 
"" x_dro_status STRI 
x_dro_pos		POS 	size_3x1 		SIZE
c_navy	 	 	BGCOL 	c_navy	 		PCOL 	x_dro_path0		PIX
pc_ivory		BGCOL 	pc_ivory		PCOL 	x_dro_path1		PIX
x_dro_cmd 		CMDL 	x_dro_status 	STATL
x_dro_state0 	STATE
x_dro_state0 x_dro_btn BUTTON

# 49) Z DRO
13 2 z_dro_pos IVEC2
"T10,66,Monospace,12,-0.9876"
z_dro_path1 PATH
'z dro code script' z_dro_cmd STRI 
"" z_dro_status STRI 
z_dro_pos		POS 	size_3x1 		SIZE
c_navy	 	 	BGCOL 	c_navy	 		PCOL 	x_dro_path0		PIX
pc_ivory		BGCOL 	pc_ivory		PCOL 	z_dro_path1		PIX
z_dro_cmd 		CMDL 	z_dro_status 	STATL
z_dro_state0 	STATE
z_dro_state0 z_dro_btn BUTTON

# 15) Spindle CW ON
10 11 sp_cw_pos IVEC2
"M80,50"
"A20,20,60,60,0,270"
"A22,22,56,56,270,-270"
"L69,50" "L79,60" "L89,50" "L79,50"
#"T20,65,Monospace,26,CW"
sp_cw_path1 PATH
'spindle CW code script' sp_cw_cmd STRI 
"" sp_cw_status STRI 
sp_cw_pos		POS 	size_1x1 		SIZE
#c_navy 		 	BGCOL  c_navy	 		PCOL  std_bg_path		PIX
pc_ivory 	 	BGCOL 	c_black	 		PCOL 	std_btn_path	PIX
c_black			BGCOL 	c_black			PCOL 	sp_cw_path1		PIX
sp_cw_cmd 		CMDL 	sp_cw_status 	STATL
sp_cw_state0 	STATE
sp_cw_state0 sp_cw_btn BUTTON

# 16) Spindle CCW ON
8 11 sp_ccw_pos IVEC2
"M30,50"
"A20,20,60,60,180,-270"
"A22,22,56,56,270,270"
"L11,50" "L21,60" "L31,50" "L21,50"
#"T15,65,Monospace,26,CCW"
sp_ccw_path1 PATH
'spindle CCW code script' sp_ccw_cmd STRI 
"" sp_ccw_status STRI 
sp_ccw_pos		POS 	size_1x1 		SIZE
#c_navy	 	 	BGCOL  c_navy	 		PCOL 	std_bg_path		PIX
pc_ivory 	 	BGCOL 	c_black	 		PCOL 	std_btn_path	PIX
c_black			BGCOL   c_black			PCOL 	sp_ccw_path1	PIX
sp_ccw_cmd 		CMDL 	sp_ccw_status 	STATL
sp_ccw_state0 	STATE
sp_ccw_state0 sp_ccw_btn BUTTON

# 18) Spindle +
10 10 sp_plus_pos 			IVEC2
"T35,67,Monospace,36,+"
sp_plus_path PATH
'spindle plus script to execute' sp_plus_cmd STRI
"" sp_plus_status STRI
# parameter p_color (pen color) could be reused for other elements.
sp_plus_pos		POS 	size_1x1 		SIZE
pc_ivory	 	BGCOL 	c_black 		PCOL 	std_btn_path	PIX
c_black			BGCOL 	c_black			PCOL 	sp_plus_path	PIX
sp_plus_cmd 	CMDL 	sp_plus_status 	STATL
sp_plus_state0 	STATE
sp_plus_state0 sp_plus_btn BUTTON

# 19) Spindle 100%
9 10 sp_100_pos 			IVEC2
"T15,60,Monospace,20,100%"
sp_100_path PATH
'spindle 100% script to execute' sp_100_cmd STRI
"" sp_100_status STRI
# parameter p_color (pen color) could be reused for other elements.
sp_100_pos		POS 	size_1x1 		SIZE
pc_ivory	 	BGCOL 	c_black 		PCOL 	std_btn_path	PIX
c_black			BGCOL 	c_black			PCOL 	sp_100_path		PIX
sp_100_cmd 		CMDL 	sp_100_status 	STATL
sp_100_state0 	STATE
sp_100_state0 sp_100_btn BUTTON

# 20) Spindle -
8 10 sp_minus_pos 			IVEC2
"T35,67,Monospace,36,-"
sp_minus_path PATH
'spindle minus script to execute' sp_minus_cmd STRI
"" sp_minus_status STRI
sp_minus_pos		POS 	size_1x1 		SIZE
pc_ivory	 	BGCOL 	c_black 		PCOL std_btn_path		PIX 
c_black			BGCOL   c_black			PCOL sp_minus_path		PIX
sp_minus_cmd 		CMDL sp_minus_status 	STATL
sp_minus_state0 	STATE
sp_minus_state0 sp_minus_btn BUTTON

# 21) Continuous motion
12 8 m_cont_pos 			IVEC2
"T12,62,Monospace,24,CONT" m_cont_path PATH
'motion continuous script to execute' m_cont_cmd STRI
"" m_cont_status STRI
m_cont_pos		POS 	size_1x1 		SIZE
c_bisque	 	BGCOL 	c_black 		PCOL 	std_btn_path	PIX
c_black			BGCOL 	c_black			PCOL 	m_cont_path		PIX
m_cont_cmd 		CMDL	m_cont_status 	STATL
m_cont_state0 	STATE
m_cont_state0 m_cont_btn BUTTON

# 22) x 0.1 step
13 8 m_x01_pos 			IVEC2
"T20,62,Monospace,24,x0.1" m_x01_path PATH
'x0.1 continuous script to execute' m_x01_cmd STRI
"" m_x01_status STRI
m_x01_pos		POS 	size_1x1 		SIZE
c_bisque	 	BGCOL 	c_black 		PCOL 	std_btn_path	PIX
c_black			BGCOL 	c_black			PCOL 	m_x01_path		PIX
m_x01_cmd 		CMDL	m_x01_status 	STATL
m_x01_state0 	STATE
m_x01_state0 m_x01_btn BUTTON

# 23) x 1 step
14 8 m_x1_pos 			IVEC2
"T32,62,Monospace,24,x1" m_x1_path PATH
'x1 continuous script to execute' m_x1_cmd STRI
"" m_x1_status STRI
m_x1_pos		POS 	size_1x1 		SIZE
c_bisque	 	BGCOL 	c_black 		PCOL 	std_btn_path	PIX
c_black			BGCOL 	c_black			PCOL 	m_x1_path		PIX
m_x1_cmd 		CMDL 	m_x1_status 	STATL
m_x1_state0 	STATE
m_x1_state0 m_x1_btn BUTTON


# 24) x 10 step
15 8 m_x10_pos 			IVEC2
"T25,62,Monospace,24,x10" m_x10_path PATH
'x10 continuous script to execute' m_x10_cmd STRI
"" m_x10_status STRI
m_x10_pos		POS 	size_1x1 		SIZE
c_bisque	 	BGCOL 	c_black 		PCOL 	std_btn_path	PIX
c_black			BGCOL 	c_black			PCOL 	m_x10_path		PIX
m_x10_cmd 		CMDL 	m_x10_status 	STATL
m_x10_state0 	STATE
m_x10_state0 m_x10_btn BUTTON

# 25) x 100 step
16 8 m_x100_pos 			IVEC2
"T20,62,Monospace,24,x100" m_x100_path PATH
'x100 continuous script to execute' m_x100_cmd STRI
"" m_x100_status STRI
m_x100_pos		POS 	size_1x1 		SIZE
c_bisque	 	BGCOL 	c_black 		PCOL 	std_btn_path	PIX
c_black			BGCOL 	c_black			PCOL 	m_x100_path		PIX
m_x100_cmd 		CMDL 	m_x100_status 	STATL
m_x100_state0 	STATE
m_x100_state0 m_x100_btn BUTTON

# 27) Feed rate override 100%
3 10 feed_100_pos 			IVEC2
"T15,60,Monospace,20,100%"
feed_100_path PATH
'feed 100% script to execute' feed_100_cmd STRI
"" feed_100_status STRI
feed_100_pos		POS size_1x1 		SIZE
c_aqua	 		BGCOL 	c_black 		PCOL  	std_btn_path		PIX
c_black			BGCOL 	c_black			PCOL 	feed_100_path		PIX
feed_100_cmd 	CMDL 	feed_100_status 	STATL
feed_100_state0 	STATE
feed_100_state0 feed_100_btn BUTTON

# 28) Feed rate override +
4 10 feed_plus_pos 			IVEC2
"T35,60,Monospace,24,+"
feed_plus_path PATH
'feed plus script to execute' feed_plus_cmd STRI
"" feed_plus_status STRI
feed_plus_pos		POS size_1x1 		SIZE
c_aqua	 		BGCOL 	c_black 		PCOL  	std_btn_path		PIX
c_black			BGCOL 	c_black			PCOL 	feed_plus_path		PIX
feed_plus_cmd 	CMDL 	feed_plus_status 	STATL
feed_plus_state0 	STATE
feed_plus_state0 feed_plus_btn BUTTON

# 29) Feed rate override -
2 10 feed_minus_pos 			IVEC2
"T35,60,Monospace,24,-"
feed_minus_path PATH
'feed minus script to execute' feed_minus_cmd STRI
"" feed_minus_status STRI
feed_minus_pos		POS size_1x1 		SIZE
c_aqua	 		BGCOL 	c_black 		PCOL  	std_btn_path		PIX
c_black			BGCOL 	c_black			PCOL 	feed_minus_path		PIX
feed_minus_cmd 	CMDL 	feed_minus_status 	STATL
feed_minus_state0 	STATE
feed_minus_state0 feed_minus_btn BUTTON

# 52) Feed Value
2 9 feed_dro_pos IVEC2
"P2,5,97,90,3,10"
feed_dro_path0 PATH
"T30,66,Monospace,12,10.0" 
feed_dro_path1 PATH
'feed dro code script' feed_dro_cmd STRI 
"" feed_dro_status STRI 
feed_dro_pos		POS 	size_3x1 		SIZE
c_navy	 	 	BGCOL 	c_navy	 		PCOL 	feed_dro_path0		PIX
pc_ivory		BGCOL 	pc_ivory		PCOL 	feed_dro_path1		PIX
feed_dro_cmd 	CMDL  	feed_dro_status STATL
feed_dro_state0 	STATE
feed_dro_state0 feed_dro_btn BUTTON

# 53) Spindle RPM
8 9 sp_dro_pos IVEC2
"P2,5,97,90,3,10"
sp_dro_path0 PATH
"T30,66,Monospace,12,2400" 
sp_dro_path1 PATH
'spindle dro code script' sp_dro_cmd STRI 
"" sp_dro_status STRI 
sp_dro_pos		POS 	size_3x1 		SIZE
c_navy	 	 	BGCOL 	c_navy	 		PCOL 	sp_dro_path0		PIX
pc_ivory		BGCOL 	pc_ivory		PCOL 	sp_dro_path1		PIX
sp_dro_cmd 	CMDL  	sp_dro_status STATL
sp_dro_state0 	STATE
sp_dro_state0 sp_dro_btn BUTTON

# 14) Machine-Absolute coordinates
# 32) Coolant 1 (Floud) On/Off
# 33) Coolant 2 (Mist) On/Off
# 34) Coolant auto-manual?
# 35) Jog Fast/Slow
# 42) AUTO/Manual (Layout)
# 43) MDI (Layout)
# 44) EDIT? (Layout)
# 45) TOOLS (Layout)
# 46) Single line (single block) execution
# -51) Connect to LinuxCNCrsh ?? may be it will connect automatically using credentials from file
# 54) GL ISO view
# 55) GL X view
# 56) GL Z view
# 57) Zoom IN
# 58) Zoom OUT
# 59) Mill Follow

# 32) Coolant 1 (Floud) On/Off

# 33) Coolant 2 (Mist) On/Off



# Layouts ---------- The first described layout is the default one.
# consider the first described layout as a default.
gcode_btn glvew_btn 
x_plus_btn x_minus_btn z_plus_btn z_minus_btn
m_cont_btn m_x01_btn m_x1_btn m_x10_btn m_x100_btn
feed_100_btn feed_plus_btn feed_minus_btn feed_dro_btn
x_sel_btn z_sel_btn
openf_btn closef_btn x_home_btn z_home_btn all_home_btn
run_gcode_btn pause_gcode_btn stop_gcode_btn
x_dro_btn z_dro_btn x_zero_btn z_zero_btn 
sp_cw_btn sp_ccw_btn
sp_plus_btn sp_100_btn sp_minus_btn sp_dro_btn
stop_btn start_btn  sstop_btn 
main_layout LAYOUT

